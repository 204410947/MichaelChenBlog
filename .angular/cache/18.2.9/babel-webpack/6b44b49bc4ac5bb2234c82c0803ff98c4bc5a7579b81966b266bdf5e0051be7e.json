{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport let BlogService = /*#__PURE__*/(() => {\n  class BlogService {\n    constructor(_http, _errorService) {\n      this._http = _http;\n      this._errorService = _errorService;\n    }\n    writeBlog(data) {\n      return this._http.post(`${environment.apiUrl}/blog`, data).pipe(catchError(err => this._errorService.handleError(err)));\n    }\n    postComment(data) {\n      return this._http.post(`${environment.apiUrl}/blog/comment`, data).pipe(catchError(err => this._errorService.handleError(err)));\n    }\n    postReact(data) {\n      return this._http.put(`${environment.apiUrl}/blog/react`, data).pipe(catchError(err => this._errorService.handleError(err)));\n    }\n    getblogList(bloggerId, categoryId, page = 1) {\n      return this._http.get(`${environment.apiUrl}/blog/${bloggerId}/${categoryId}?page=${page}`).pipe(catchError(err => this._errorService.handleError(err)));\n    }\n    getBlogDetails(blogId) {\n      return this._http.get(`${environment.apiUrl}/blog/details/${blogId}`).pipe(catchError(err => this._errorService.handleError(err)));\n    }\n    static #_ = (() => this.ɵfac = function BlogService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BlogService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BlogService,\n      factory: BlogService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return BlogService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}