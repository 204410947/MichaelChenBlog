{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nlet BlogComponent = class BlogComponent {\n  constructor(_authService, _route, _blogService) {\n    this._authService = _authService;\n    this._route = _route;\n    this._blogService = _blogService;\n    this.blog = {\n      sub: null,\n      error: null,\n      loading: false,\n      blogId: null,\n      data: null\n    };\n    this.User = {\n      sub: null,\n      error: null,\n      loading: false,\n      data: {\n        _id: null,\n        first_name: null,\n        role: null\n      },\n      hasReact: null\n    };\n    this.postComment = {\n      sub: null,\n      error: null,\n      loading: false,\n      success: false,\n      body: {\n        blogId: null,\n        body: null\n      }\n    };\n    this.postReact = {\n      sub: null,\n      error: null,\n      loading: false,\n      body: {\n        blogId: null,\n        reactName: null\n      }\n    };\n  }\n  ngOnInit() {\n    this.apiUrl = environment.apiUrl + '/';\n    this.getLoggedInUserData();\n    this.blog.blogId = this._route.snapshot.paramMap.get('blogId');\n    this.getBlogDetails(this.blog.blogId);\n  }\n  ngOnDestroy() {\n    this.User.sub.unsubscribe();\n  }\n  getLoggedInUserData() {\n    this.User.loading = true;\n    this.User.error = null;\n    this.User.sub = this._authService.$User.subscribe(res => {\n      this.User.data = res;\n      this.User.loading = false;\n    }, err => {\n      this.User.loading = false;\n      this.User.error = err;\n    });\n  }\n  getBlogDetails(blogId) {\n    this.blog.error = null;\n    this.blog.loading = true;\n    this.blog.sub = this._blogService.getBlogDetails(blogId).subscribe(res => {\n      this.blog.data = res;\n      this.blog.loading = false;\n      this.checkHasReact();\n      this.blog.sub.unsubscribe();\n    }, err => {\n      this.blog.error = err;\n      this.blog.loading = false;\n      this.blog.sub.unsubscribe();\n    });\n  }\n  doComment(commentForm) {\n    this.postComment.body.blogId = this.blog.blogId;\n    this.postComment.error = null;\n    this.postComment.loading = true;\n    this.postComment.success = false;\n    this.postComment.sub = this._blogService.postComment(this.postComment.body).subscribe(res => {\n      this.blog.data.comments = res.comments;\n      commentForm.resetForm();\n      this.postComment.error = null;\n      this.postComment.loading = false;\n      this.postComment.success = true;\n      this.postComment.sub.unsubscribe();\n    }, err => {\n      this.postComment.error = err;\n      this.postComment.loading = false;\n      this.postComment.sub.unsubscribe();\n    });\n  }\n  doReact(reactName) {\n    if (!this.User.data) {\n      return;\n    }\n    this.postReact.body.blogId = this.blog.blogId;\n    this.postReact.body.reactName = reactName;\n    this.postReact.loading = true;\n    this.postReact.error = null;\n    this.postReact.sub = this._blogService.postReact(this.postReact.body).subscribe(res => {\n      this.blog.data.reacts = res.reacts;\n      this.checkHasReact();\n      this.postReact.loading = false;\n      this.postReact.sub.unsubscribe();\n    }, err => {\n      this.postReact.error = err;\n      this.postReact.loading = false;\n      this.postReact.sub.unsubscribe();\n    });\n  }\n  checkHasReact() {\n    this.User.hasReact = null;\n    const REACTS = ['like', 'love', 'sad', 'funny', 'informative'];\n    let checkR = [];\n    REACTS.forEach(r => {\n      checkR = this.blog.data.reacts[r].filter(e => e == this.User.data._id);\n      if (checkR.length > 0) {\n        this.User.hasReact = r;\n      }\n    });\n  }\n};\nBlogComponent = __decorate([Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.scss']\n})], BlogComponent);\nexport { BlogComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}