{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport let CategoryService = /*#__PURE__*/(() => {\n  class CategoryService {\n    constructor(_http, _errorService) {\n      this._http = _http;\n      this._errorService = _errorService;\n    }\n    getCategoryList() {\n      return this._http.get(`${environment.apiUrl}/category`).pipe(catchError(err => this._errorService.handleError(err)));\n    }\n    addCategoryList(name) {\n      return this._http.post(`${environment.apiUrl}/category`, {\n        name: name\n      }).pipe(catchError(err => this._errorService.handleError(err)));\n    }\n    getCategorizedBlogCount(bloggerId = 'all') {\n      return this._http.get(`${environment.apiUrl}/category/categorizedBlogs/${bloggerId}`).pipe(catchError(err => this._errorService.handleError(err)));\n    }\n  }\n  CategoryService.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n  };\n  CategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: 'root'\n  });\n  return CategoryService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}